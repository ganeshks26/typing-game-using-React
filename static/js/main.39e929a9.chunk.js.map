{"version":3,"sources":["Components/Words.js","Components/Container.js","Components/Button.js","Components/Typeracer.js","Components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","className","Button","handleStart","disabled","onClick","Typeracer","props","newWord","inputValue","setInputValue","time","animation","handleInput","style","type","name","id","onKeyPress","e","value","onChange","target","placeholder","Results","correctResults","wrongResults","countCorrect","map","correctWord","index","wrongWord","App","useState","Words","word","setNewWord","setDisabled","setCorrectResults","setWrongResults","setCountCorrect","setTime","setAnimation","randomWord","Math","floor","random","useEffect","setTimeout","prevTime","charCode","trim","prevCorrect","prevWrong","checkAnswer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,GACb,UACA,OACA,QACA,SACA,UACA,MACA,MACA,MACA,QACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,QACA,MACA,UACA,UACA,OACA,QACA,QACA,UACA,OACA,QACA,UACA,UACA,SACA,OACA,QACA,OACA,UACA,SACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,SACA,UACA,OACA,OACA,WACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,SACA,SACA,UACA,UACA,QACA,SACA,OACA,OACA,QACA,QACA,SACA,MACA,OACA,UACA,MACA,QACA,OACA,OACA,OACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,OACA,MACA,SACA,UACA,OACA,MACA,SACA,UACA,MACA,MACA,SACA,UACA,MACA,UACA,QACA,UACA,UACA,OACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,SACA,UACA,OACA,UACA,QACA,UACA,QACA,SACA,MACA,QACA,MACA,UACA,MACA,UACA,QACA,QACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,SACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,SACA,MACA,SACA,QACA,QACA,SACA,SACA,MACA,OACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,OACA,UACA,UACA,SACA,QACA,MACA,UACA,SACA,UACA,OACA,QACA,QACA,QACA,UACA,MACA,UACA,OACA,QACA,OACA,OACA,UACA,OACA,QACA,QACA,OACA,S,eCrLaA,MARf,YAAgC,IAAZC,EAAW,EAAXA,SAChB,OACI,qBAAKC,UAAU,YAAf,SACKD,KCKEE,MARf,YAAyC,IAAxBC,EAAuB,EAAvBA,YAAYC,EAAW,EAAXA,SACzB,OAEQ,wBAAQC,QAASF,EAAjB,SAA+BC,EAAW,QAAU,aCwBjDE,MA1Bf,SAAmBC,GAEf,IAAOC,EAAkFD,EAAlFC,QAAQC,EAA0EF,EAA1EE,W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","file":"static/js/main.39e929a9.chunk.js","sourcesContent":["export default [\r\n  \"Dismiss\",\r\n  \"Spot\",\r\n  \"North\",\r\n  \"exempt\",\r\n  \"inflate\",\r\n  \"Pay\",\r\n  \"inn\",\r\n  \"Fly\",\r\n  \"world\",\r\n  \"Opinion\",\r\n  \"belong\",\r\n  \"Shop\",\r\n  \"solve\",\r\n  \"Rocket\",\r\n  \"policy\",\r\n  \"Exile\",\r\n  \"waiter\",\r\n  \"Broken\",\r\n  \"execute\",\r\n  \"Copper\",\r\n  \"dollar\",\r\n  \"Begin\",\r\n  \"ask\",\r\n  \"Stadium\",\r\n  \"release\",\r\n  \"Lock\",\r\n  \"money\",\r\n  \"Asset\",\r\n  \"recruit\",\r\n  \"Band\",\r\n  \"watch\",\r\n  \"fantasy\",\r\n  \"Passion\",\r\n  \"agency\",\r\n  \"full\",\r\n  \"Sweat\",\r\n  \"sick\",\r\n  \"liberty\",\r\n  \"Salmon\",\r\n  \"chief\",\r\n  \"fibre\",\r\n  \"Steel\",\r\n  \"rush\",\r\n  \"lover\",\r\n  \"Finish\",\r\n  \"fling\",\r\n  \"future\",\r\n  \"Unaware\",\r\n  \"shrink\",\r\n  \"ceiling\",\r\n  \"Unit\",\r\n  \"name\",\r\n  \"imported\",\r\n  \"Native\",\r\n  \"infect\",\r\n  \"knock\",\r\n  \"creed\",\r\n  \"Thick\",\r\n  \"marsh\",\r\n  \"tear\",\r\n  \"moment\",\r\n  \"Animal\",\r\n  \"wrestle\",\r\n  \"genetic\",\r\n  \"slide\",\r\n  \"Volume\",\r\n  \"hear\",\r\n  \"meal\",\r\n  \"doubt\",\r\n  \"Chord\",\r\n  \"exotic\",\r\n  \"fan\",\r\n  \"meat\",\r\n  \"Counter\",\r\n  \"god\",\r\n  \"means\",\r\n  \"deep\",\r\n  \"Lead\",\r\n  \"silk\",\r\n  \"safety\",\r\n  \"bounce\",\r\n  \"Arena\",\r\n  \"lend\",\r\n  \"rebel\",\r\n  \"sweep\",\r\n  \"Hiccup\",\r\n  \"slime\",\r\n  \"scale\",\r\n  \"fold\",\r\n  \"Die\",\r\n  \"embryo\",\r\n  \"trolley\",\r\n  \"east\",\r\n  \"Old\",\r\n  \"senior\",\r\n  \"dilemma\",\r\n  \"sip\",\r\n  \"rub\",\r\n  \"Heaven\",\r\n  \"economy\",\r\n  \"day\",\r\n  \"Outlook\",\r\n  \"price\",\r\n  \"limited\",\r\n  \"Diamond\",\r\n  \"flow\",\r\n  \"insure\",\r\n  \"sail\",\r\n  \"Punch\",\r\n  \"scene\",\r\n  \"peace\",\r\n  \"shame\",\r\n  \"stall\",\r\n  \"Tune\",\r\n  \"result\",\r\n  \"reactor\",\r\n  \"Love\",\r\n  \"eyebrow\",\r\n  \"piece\",\r\n  \"undress\",\r\n  \"Mouse\",\r\n  \"poison\",\r\n  \"way\",\r\n  \"clear\",\r\n  \"raw\",\r\n  \"Inspire\",\r\n  \"pen\",\r\n  \"Applied\",\r\n  \"issue\",\r\n  \"irony\",\r\n  \"history\",\r\n  \"Trouser\",\r\n  \"bathtub\",\r\n  \"thirsty\",\r\n  \"seller\",\r\n  \"Graphic\",\r\n  \"comfort\",\r\n  \"extreme\",\r\n  \"Alcohol\",\r\n  \"charge\",\r\n  \"brink\",\r\n  \"Extract\",\r\n  \"linger\",\r\n  \"work\",\r\n  \"title\",\r\n  \"hell\",\r\n  \"Create\",\r\n  \"dine\",\r\n  \"common\",\r\n  \"red\",\r\n  \"Strict\",\r\n  \"quiet\",\r\n  \"swipe\",\r\n  \"Immune\",\r\n  \"energy\",\r\n  \"fox\",\r\n  \"save\",\r\n  \"tent\",\r\n  \"Master\",\r\n  \"reveal\",\r\n  \"resort\",\r\n  \"Expand\",\r\n  \"neutral\",\r\n  \"basket\",\r\n  \"faint\",\r\n  \"boom\",\r\n  \"Impound\",\r\n  \"wording\",\r\n  \"Subway\",\r\n  \"wound\",\r\n  \"cut\",\r\n  \"Auction\",\r\n  \"bullet\",\r\n  \"station\",\r\n  \"moon\",\r\n  \"Tower\",\r\n  \"noble\",\r\n  \"stick\",\r\n  \"Lighter\",\r\n  \"see\",\r\n  \"Extinct\",\r\n  \"cell\",\r\n  \"stage\",\r\n  \"Mass\",\r\n  \"belt\",\r\n  \"similar\",\r\n  \"Clay\",\r\n  \"stake\",\r\n  \"Flush\",\r\n  \"mood\",\r\n  \"Terms\",\r\n];\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Container({children}) {\r\n    return (\r\n        <div className=\"container\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react'\r\n\r\nfunction Button({handleStart,disabled}) {\r\n    return (\r\n       \r\n            <button onClick={handleStart}>{disabled ? 'Start' : 'Restart'}</button>\r\n        \r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport Button from \"./Button\"\r\n\r\nfunction Typeracer(props) {\r\n\r\n    const {newWord,inputValue,setInputValue,disabled,time,animation,handleInput,handleStart}=props\r\n\r\n    return (\r\n        <div className=\"typeRacer\">\r\n            <div className=\"wordOutput\">\r\n                <p>{newWord}</p>\r\n            </div>\r\n            <div style={{animation:animation!==null ? animation:\" \" }}className=\"time\">\r\n                <p>{time}</p>\r\n            </div>\r\n            <div className=\"wordValues\">\r\n                <input type=\"text\" name=\"\" id=\"\" \r\n                disabled={disabled && disabled} \r\n                onKeyPress={e=>handleInput(e)}\r\n                value={inputValue} \r\n                onChange={(e)=>setInputValue(e.target.value)}\r\n                placeholder={disabled ? \"\": \"start typing....\"}\r\n                />\r\n                <Button handleStart={handleStart} disabled={disabled} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Typeracer\r\n","import React from 'react'\r\n\r\nfunction Results({correctResults,wrongResults,countCorrect}) {\r\n    return (\r\n         <div className=\"results\">\r\n             <div className=\"title\">\r\n                 <p>Correct answers:{countCorrect}</p>\r\n             </div>\r\n             <div className=\"resultsContainer\">\r\n                 <div className=\"correctResults\">\r\n                     {correctResults.map((correctWord,index)=>\r\n                         <div key={index} className=\"row\">\r\n                             <p>{correctWord}</p>\r\n                         </div>\r\n                     )}\r\n                 </div>\r\n                 <div className=\"wrongResults\">\r\n                     {wrongResults.map((wrongWord,index)=>\r\n                         <div key={index} className=\"row\">\r\n                            <p>{wrongWord}</p>\r\n                         </div>\r\n                     )}\r\n                 </div>\r\n             </div>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React, { useState,useEffect} from 'react'\nimport Words from \"./Components/Words\"\nimport './App.css';\nimport Container from './Components/Container';\nimport Typeracer from \"./Components/Typeracer\";\nimport Results from \"./Components/Results\"\n\nfunction App() {\n\n  const [word, setWord] = useState(Words)\n  const [newWord, setNewWord] = useState(word[0])\n  const [disabled, setDisabled] = useState(false)\n  const [correctResults, setCorrectResults] = useState([])\n  const [wrongResults, setWrongResults] = useState([])\n  const [countCorrect, setCountCorrect] = useState(0)\n  const [time, setTime] = useState(30)\n  const [inputValue, setInputValue] = useState(\"\")\n  const [animation, setAnimation] = useState(null)\n\n  let randomWord=Math.floor(Math.random()* (191-1+1)+1)\n \n\n//  logical part\n  // this checkanswer used to upadate 2 things \n  // 1.correctvalue\n  // 2.update the number of correct value\n  const checkAnswer=()=>{\n    if(inputValue.trim()===newWord){\n      \n      setCorrectResults(prevCorrect =>[...prevCorrect,newWord])\n      //here we have to print the newword which we got along with previous words\n      setCountCorrect(prevCorrect=>prevCorrect+1)\n      // for that previous correct values we have increase the count by 1\n      return;\n    }\n    setWrongResults(prevWrong=>[...prevWrong,inputValue])\n     //here we have to print the wrongword which we got along with previous words\n  }\n\n  const handleInput=(e)=>{\n      if(e.charCode ===13 && inputValue.trim()!==\"\"){\n        // if charcode 13 means enter if that is equal to 13 and input value must not be empty\n        checkAnswer();                // this is called if above both the conditions met\n        setNewWord(word[randomWord])  // after checking the answer it should givethe new word by using randomword logic\n        setInputValue(\"\")             // inputvalue must set to empty\n      }\n  }\n \n  // this function is for button and input value\n  // it will triggered when again u restarted\n  const handleStart =()=>{\n    setDisabled(!disabled)\n    setCorrectResults([])\n    setWrongResults([])\n    setCountCorrect(0)\n    setInputValue(\"\") \n  }\n\n\n  useEffect(()=>{\n    if(time <= 30 && time!==0 && disabled===false){\n      setTimeout(()=>setTime(prevTime=>prevTime-1),1000)\n    }else if(disabled){\n      setTime(30)\n      setAnimation(null)\n    }\n    else if(time===0){\n      setDisabled(true)\n    }\n\n    if(time<=10){\n      setAnimation(\"scaleNumber 2s infinite\")\n    }\n  },[disabled,time])\n \n  useEffect(()=>{\n    setNewWord(word[randomWord])\n  },[])\n\n  return (\n    <div className=\"App\">\n      <Container>\n          <Typeracer\n          newWord={newWord}\n          inputValue={inputValue}\n          setInputValue={setInputValue}\n          disabled={disabled}\n          time={time}\n          animation={animation}\n          handleInput={handleInput}\n          handleStart={handleStart}\n          />\n\n      </Container>  \n      <Results\n      correctResults={correctResults}\n      wrongResults={wrongResults}\n      countCorrect={countCorrect}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}